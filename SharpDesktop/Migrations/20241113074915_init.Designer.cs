// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SharpDesktop.Models;

#nullable disable

namespace SharpDesktop.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20241113074915_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.10");

            modelBuilder.Entity("SharpDesktop.Models.Entity.Desktop", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("IconName")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Desktops", (string)null);
                });

            modelBuilder.Entity("SharpDesktop.Models.Entity.Launcher", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("BackgroundPath")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("DesktopId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Path")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DesktopId");

                    b.ToTable("Launchers", (string)null);
                });

            modelBuilder.Entity("SharpDesktop.Models.Entity.Launcher", b =>
                {
                    b.HasOne("SharpDesktop.Models.Entity.Desktop", "Desktop")
                        .WithMany("Launchers")
                        .HasForeignKey("DesktopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Desktop");
                });

            modelBuilder.Entity("SharpDesktop.Models.Entity.Desktop", b =>
                {
                    b.Navigation("Launchers");
                });
#pragma warning restore 612, 618
        }
    }
}
